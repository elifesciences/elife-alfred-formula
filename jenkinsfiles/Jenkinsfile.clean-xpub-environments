elifePipeline {
    def oldPullRequests
    stage "Calculate old pull requests", {
        checkout scm
        // ["902", ...]
        oldPullRequests = jenkinsCli("groovy = <jenkinsfiles/old-pull-requests.groovy elife-xpub", true).trim().split("\n")
        echo "Found old pull requests: ${oldPullRequests}"
    }

    stage "Delete Helm releases", {
        // ["elife-xpub--pr-902", ...]
        def releases = sh([
            script: "set -o pipefail; sudo -u elife -H helm ls elife-xpub-- --output json | jq -r '.Releases[].Name'",
            returnStdout: true
        ]).trim().split("\n").toList()
        echo "Found current releases: ${releases}"
        for (pr in oldPullRequests) {
            // avoid GStringImpl clash with ArrayList<String>
            def oldRelease = "elife-xpub--pr-${pr}".toString()
            if (releases.contains(oldRelease)) {
                sh "sudo -u elife -H helm delete ${oldRelease}"
            }
        }
    }
}
