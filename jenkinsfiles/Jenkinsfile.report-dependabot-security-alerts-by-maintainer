elifePipeline {
    stage "Report", {
        withCredentials([string(credentialsId: "process-github-repo-security-alerts", variable: 'GITHUB_TOKEN')]) {
            // download latest list of project maintainers
            sh('curl --header "Authorization: Bearer ${GITHUB_TOKEN}" "https://raw.githubusercontent.com/elifesciences/elife-playbook/master/maintainers-txt-report.json" --output project-maintainers.json')

            // download the latest security alert checker
            sh('''
                set -e
                curl https://github.com/elifesciences/github-repo-security-alerts/releases/latest/download/linux-amd64 --location --output github-repo-security-alerts
                chmod +x github-repo-security-alerts
            ''')

            // generate a report of maintainer => projects => alert-list
            output = sh(script: 'GITHUB_TOKEN=${GITHUB_TOKEN} ./github-repo-security-alerts project-maintainers.json', returnStdout:true)
            output = output.trim()
            if (output != "") {
                def report = readJSON(text: output)
                report.each{maintainer, project_map -> 
                    // format just this slice of the report
                    body = writeJSON(returnText: true, json: project_map, pretty: 4)

                    // alert the maintainer responsible
                    mail subject: "Daily dependabot security alerts", to: "${maintainer}", from: "alfred@elifesciences.org", replyTo: "no-reply@elifesciences.org", body: "Outstanding Dependabot security alerts found for ${maintainer}:\n\n${body}\n\n${BUILD_URL}"
                    echo "email sent to ${maintainer}"
                }
            }
        }
    }
}
