import jenkins.model.Jenkins

def stackname = 'containers--jenkins-plugin-ami'

elifePipeline {
    stage 'Update AMI stack', {
        sh "/srv/builder/bldr tasks.remove_minion_key:${stackname}" 
        builderUpdate stackname
    }

    def amiId
    def generated = sh(script: 'date +"%Y%m%d%H%M%S"', returnStdout: true).trim()
    def amiName = "containers-${generated}"
    stage 'Generate AMI', {
        sh "BUILDER_NON_INTERACTIVE=1 /srv/builder/bldr tasks.create_ami:${stackname},name=${amiName} | tee ${amiName}.log" 
        amiId = sh(script: "cat ${amiName}.log | grep '^ami-'", returnStdout: true).trim()
        sh "/srv/builder/bldr stop:${stackname}"
    }

    stage 'Update AMI value', {
        checkout scm
        // separate script to avoid approving tons of methods for this pipeline
        // pass argument $amiId in some way
        jenkinsCli "groovy = <jenkinsfiles/ec2-plugin-ami-update.groovy ${amiId}"
    }

    stage 'Retire outdated agents', {
        jenkinsCli "groovy = <jenkinsfiles/ec2-plugin-nodes-retirement.groovy"
    }
}

