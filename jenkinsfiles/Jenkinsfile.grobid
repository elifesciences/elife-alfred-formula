elifePipeline {
    node('containers-jenkins-plugin') {
        def commit
        def revision = params.revision ? params.revision : 'catchall'
        def tag = params.revision ? params.revision : 'latest'

        stage "Checkout", {
            sh "rm -rf grobid && git clone -b ${revision} git@github.com:elifesciences/grobid.git"
            commit = sh(returnStdout: true, script: "cd grobid && git rev-parse HEAD").trim()
            echo "commit: ${commit}"
        }

        stage "Build Image", {
            dir('grobid') {
                // we are using a blank version as the commit hash wouldn't be a valid version
                sh "docker build -t elifesciences/grobid:${commit} --build-arg GROBID_VERSION= ."
            }
        }

        stage 'Push unstable image', {
            def image = DockerImage.elifesciences(this, 'grobid', commit)
            def unstable_image = image.addSuffixAndTag('_unstable', commit)
            unstable_image.tag(tag).push()
            unstable_image.push()
        }
    }
}
