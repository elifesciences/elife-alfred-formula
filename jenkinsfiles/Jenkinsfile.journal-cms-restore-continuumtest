elifePipeline {
    def stackname = 'journal-cms--continuumtest'
    def backupLocation = 's3://elife-app-backups/journal-cms/'

    stage 'Credentials generation', {
        def assumeRoleOutput = sh(script: 'aws sts assume-role --role-arn arn:aws:iam::512686554592:role/journal-cms--prod--ReadBackups --role-session-name process-journal-cms-restore-continuumtest | jq .Credentials | tee journal-cms-backup-temporary-credentials.json', returnStdout: true)
        def credentials = readJSON text: assumeRoleOutput
        def environmentSecrets = "export AWS_ACCESS_KEY_ID=${credentials.AccessKeyId} AWS_SECRET_ACCESS_KEY=${credentials.SecretAccessKey} AWS_SESSION_TOKEN=${credentials.SessionToken}"
        writeFile file: 'backups.env', text: environmentSecrets
    }

    lock (stackname) {
        stage 'Retrieve files', {
            def workingDirectory = pwd()
            sh "${env.BUILDER_PATH}bldr upload_file:${stackname},${workingDirectory}/backups.env,/tmp/backups.env,overwrite=true,confirm=true"
            builderCmd 'journal-cms--continuumtest', 'cd /srv/journal-cms && source /tmp/backups.env && scripts/download-backup.sh'
        }

        stage 'Restore backup', {
            builderCmd 'journal-cms--continuumtest', "cd /srv/journal-cms && scripts/restore-backup.sh"
        }

        stage 'Redeploy master', {
            builderDeployRevision 'journal-cms--continuumtest', 'master'
        }
    }
}
